
  async getAll(
    word?: string,
    minPrice?: string,
    maxPrice?: string,
    state?: PropertyStatus,
  ) {
    const filters: FindOptionsWhere<Estate>[] = [];

    // شرط البحث
    if (word) {
      filters.push({ property: { title: Like(`%${word}%`) } });
      filters.push({ property: { description: Like(`%${word}%`) } });
    }

    // شروط السعر
    const priceConditions: any = {};
    if (minPrice !== undefined && maxPrice !== undefined) {
      priceConditions.price = Between(parseInt(minPrice), parseInt(maxPrice));
    } else if (minPrice !== undefined) {
      priceConditions.price = MoreThanOrEqual(parseInt(minPrice));
    } else if (maxPrice !== undefined) {
      priceConditions.price = LessThanOrEqual(parseInt(maxPrice));
    }

    const where =
      filters.length > 0
        ? filters.map((filter) => ({ ...filter, ...priceConditions }))
        : { ...priceConditions };
    //
    const estates: Estate[] = await this.estateRepository.find({
      where,
      relations: { property: { user: true } },
      select: {
        property: {
          location: {
            country: true,
            governorate: true,
            city: true,
            quarter: true,
            street: true,
          },
          user: { username: true },
        },
      },
    });
    if (!estates || estates.length === 0) {
      throw new NotFoundException('No estates found');
    }
    return estates;
  }
